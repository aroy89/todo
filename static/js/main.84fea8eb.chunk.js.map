{"version":3,"sources":["todo/Form.jsx","todo/Todo.jsx","todo/TodoList.jsx","App.js","index.js"],"names":["Form","input","setInput","todos","setTodos","setStatus","className","value","onChange","event","target","type","name","id","onClick","preventDefault","_id","Math","floor","random","text","completed","Todo","todo","map","item","filter","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filteredHandler","saveLocalTodos","items","localStorage","setItem","JSON","stringify","getItem","localTodos","parse","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84fea8eb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n         \r\nconst Form = ({input, setInput, todos, setTodos, setStatus}) => {\r\n\r\n    const todoInputHandler = (event) =>{\r\n        setInput(event.target.value);\r\n    }\r\n    const todoAddHandler = (event) => {\r\n        event.preventDefault();\r\n        setTodos([\r\n            ...todos, \r\n            {\r\n                _id: Math.floor(Math.random() * 10000),\r\n                text: input, \r\n                completed: false, \r\n            }\r\n        ]);\r\n        setInput(\"\");\r\n        // document.getElementById('form').value = '';\r\n    }\r\n\r\n    const statusHandler = (event) =>{\r\n        // console.log(event.target.value);\r\n        setStatus(event.target.value);\r\n    }\r\n    return (\r\n        <div className=\"form\">\r\n            <input value={input} onChange={todoInputHandler} type=\"text\" name=\"form\" id=\"form\"/>\r\n            <button onClick={todoAddHandler} name=\"add\">Add</button>\r\n            <select className=\"status\" onChange={statusHandler}>\r\n                <option value='all'>All</option>\r\n                <option value='completed'>Completed</option>\r\n                <option value='uncompleted'>Uncompleted</option>\r\n            </select>\r\n        </div>\r\n       \r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ({todo, todos, setTodos}) =>{\r\n\r\n    const deleteHandler = (event) =>{\r\n        setTodos(todos.filter( (item) =>  item._id !== todo._id));\r\n    }\r\n    const completeHandler = (event) =>{\r\n        setTodos(\r\n            todos.map( item => {\r\n                if(item._id === todo._id){\r\n                    return{\r\n                        ...item,\r\n                        completed: !item.completed\r\n                    }\r\n                }\r\n                return item;\r\n            }))\r\n    }\r\n    return(\r\n        <>\r\n            <li className=\"list\">\r\n                <button onClick={completeHandler}>O</button>\r\n                <label className={`${todo.completed ? \"completed\" : \"\"}`}>{todo.text}</label>\r\n                <button onClick={deleteHandler}>X</button>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({todos, setTodos, filteredTodos }) =>{\r\n    return(\r\n        <div>\r\n            <ul className=\"todolist\">\r\n                {\r\n                    filteredTodos.map( todo => {\r\n                        return (\r\n                        <Todo \r\n                            setTodos={setTodos}\r\n                            todos={todos}\r\n                            todo={todo}\r\n                            key={todo._id}\r\n                        />\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TodoList;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Form from './todo/Form';\nimport TodoList from './todo/TodoList';\n\nfunction App() {\n\n  // use State\n  const [input, setInput] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  // use Effect run once\n  useEffect(()=>{\n    getLocalTodos();    \n  }, []);\n  // use Effect\n  useEffect(()=>{\n    filteredHandler();\n    saveLocalTodos();\n  }, [todos, status])\n\n const filteredHandler = () =>{\n   switch(status)\n   {\n      case 'completed':\n        setFilteredTodos(todos.filter( items => items.completed === true ))\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter( items => items.completed === false ))\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n   }\n }\n  // Save todo list into the local storage\n  const saveLocalTodos = ()=> {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n  // Get todo list from the local storage\n  const getLocalTodos = () => {\n  if(localStorage.getItem(\"todos\") === null)\n  {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n  }\n  else\n  {\n      let localTodos = JSON.parse(localStorage.getItem(\"todos\"));\n      console.log(localTodos);\n      setTodos(localTodos);\n  }\n  }\n  return (\n    <div className=\"main\">\n      <header>\n        <h1>My Todo App</h1>\n      </header>\n      <Form \n        input={input} \n        setInput={setInput}\n        todos={todos}\n        setTodos={setTodos}\n        setStatus={setStatus}\n        // setFilteredTodos={setFilteredTodos}\n        />\n      <TodoList \n         todos={todos}\n         setTodos={setTodos}\n         filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}